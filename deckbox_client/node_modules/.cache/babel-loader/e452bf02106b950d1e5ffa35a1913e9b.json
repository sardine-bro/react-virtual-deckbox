{"ast":null,"code":"var _jsxFileName = \"/Users/teodorogarcia/Flatiron/projects/react-virtual-deckbox/deckbox_client/src/components/Profile.js\";\nimport React, { Component } from 'react';\nimport { getUser } from '../redux/actions/userActions';\nimport { connect } from 'react-redux';\nimport { getToken } from '../services/local-storage';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  componentDidMount() {\n    // console.log(this.props)\n    this.props.getUser();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"profile\",\n      children: [getToken ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }, this) : null, this.props.user.name ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.props.user.name, \"'s Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"loading\",\n        children: \"Beep Boop Fetching Your Profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user,\n    deckBoxes\n  } = state;\n  return {\n    user,\n    deckBoxes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser: () => dispatch(getUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/teodorogarcia/Flatiron/projects/react-virtual-deckbox/deckbox_client/src/components/Profile.js"],"names":["React","Component","getUser","connect","getToken","Redirect","Profile","componentDidMount","props","render","user","name","mapStateToProps","state","deckBoxes","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE5BM,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKC,KAAL,CAAWN,OAAX;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,iBACKL,QAAQ,gBAAG,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAH,GAA8B,IAD3C,EAEK,KAAKI,KAAL,CAAWE,IAAX,CAAgBC,IAAhB,gBAAuB;AAAA,mBAAK,KAAKH,KAAL,CAAWE,IAAX,CAAgBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAAmE;AAAI,QAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFxE;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAb2B;;AAehC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,QAAM;AAACH,IAAAA,IAAD;AAAOI,IAAAA;AAAP,MAAoBD,KAA1B;AACA,SAAO;AACHH,IAAAA,IADG;AACGI,IAAAA;AADH,GAAP;AAGH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHd,IAAAA,OAAO,EAAE,MAAMc,QAAQ,CAACd,OAAO,EAAR;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAeC,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { getUser } from '../redux/actions/userActions'\nimport { connect } from 'react-redux'\nimport { getToken } from '../services/local-storage'\nimport { Redirect } from 'react-router-dom'\n\nclass Profile extends Component {\n   \n    componentDidMount() {\n        // console.log(this.props)\n        this.props.getUser()\n    }\n    render() {\n        return (\n            <div id=\"profile\">\n                {getToken ? <Redirect to=\"/login\" /> : null}\n                {this.props.user.name ? <h1>{this.props.user.name}'s Profile</h1> : <h1 id=\"loading\">Beep Boop Fetching Your Profile...</h1>}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    const {user, deckBoxes} = state\n    return {\n        user, deckBoxes\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUser: () => dispatch(getUser())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}