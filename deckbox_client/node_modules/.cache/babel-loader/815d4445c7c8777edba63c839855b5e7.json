{"ast":null,"code":"var _jsxFileName = \"/Users/teodorogarcia/Flatiron/projects/react-virtual-deckbox/deckbox_client/src/components/Profile.js\";\nimport React, { Component } from 'react';\nimport { profileRequest } from '../services/api';\nimport { getUser } from '../redux/actions/userActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      deckBoxes: []\n    };\n  }\n\n  componentDidMount() {\n    profileRequest().then(res => {\n      if (!res.error) {\n        this.setState({\n          username: res.username,\n          deckBoxes: res.deckboxes\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"profile\",\n      children: this.props.user.username ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [this.props.user.username, \"'s Profile\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Beep Boop Fetching Your Profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 93\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    user,\n    deckBoxes\n  } = state;\n  return {\n    user,\n    deckBoxes\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUser\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","map":{"version":3,"sources":["/Users/teodorogarcia/Flatiron/projects/react-virtual-deckbox/deckbox_client/src/components/Profile.js"],"names":["React","Component","profileRequest","getUser","connect","Profile","state","username","deckBoxes","componentDidMount","then","res","error","setState","deckboxes","render","props","user","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BK,KAD4B,GACpB;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADoB;AAAA;;AAM5BC,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,cAAc,GACbQ,IADD,CACMC,GAAG,IAAI;AACT,UAAI,CAACA,GAAG,CAACC,KAAT,EAAgB;AACZ,aAAKC,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEI,GAAG,CAACJ,QAAhB;AAA0BC,UAAAA,SAAS,EAAEG,GAAG,CAACG;AAAzC,SAAd;AACH;AACJ,KALD;AAMH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACK,KAAKC,KAAL,CAAWC,IAAX,CAAgBV,QAAhB,gBAA2B;AAAA,mBAAK,KAAKS,KAAL,CAAWC,IAAX,CAAgBV,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3B,gBAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADhF;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AApB2B;;AAsBhC,MAAMW,eAAe,GAAGZ,KAAK,IAAI;AAC7B,QAAM;AAACW,IAAAA,IAAD;AAAOT,IAAAA;AAAP,MAAoBF,KAA1B;AACA,SAAO;AACHW,IAAAA,IADG;AACGT,IAAAA;AADH,GAAP;AAGH,CALD;;AAOA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHjB,IAAAA;AADG,GAAP;AAGH,CAJD;;AAMA,eAAeC,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6Cd,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { profileRequest } from '../services/api'\nimport { getUser } from '../redux/actions/userActions'\nimport { connect } from 'react-redux'\n\nclass Profile extends Component {\n    state = {\n        username: '',\n        deckBoxes: []\n    }\n\n    componentDidMount() {\n        profileRequest()\n        .then(res => {\n            if (!res.error) {\n                this.setState({ username: res.username, deckBoxes: res.deckboxes})\n            }\n        })\n    }\n    render() {\n        return (\n            <div id=\"profile\">\n                {this.props.user.username ? <h1>{this.props.user.username}'s Profile</h1> : <h1>Beep Boop Fetching Your Profile...</h1>}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    const {user, deckBoxes} = state\n    return {\n        user, deckBoxes\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUser\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);"]},"metadata":{},"sourceType":"module"}