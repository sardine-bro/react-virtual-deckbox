{"ast":null,"code":"const URL = 'http://localhost:3000/';\nconst usersURL = URL + 'users';\n\nconst parseJSON = res => res.json();\n\nconst authHeaders = () => ({\n  Authorization: `Bearer ${localStorage.getItem('jwt')}`\n});\n\nconst loginHeaders = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json'\n};\nexport function authRequest(credentials) {\n  return fetch(URL + 'authenticate', {\n    method: 'POST',\n    headers: loginHeaders,\n    body: JSON.stringify(credentials)\n  }).then(parseJSON);\n}\nexport function profileRequest() {\n  return fetch(URL + 'profile', {\n    headers: authHeaders\n  }).then(parseJSON);\n}","map":{"version":3,"sources":["/Users/teodorogarcia/Flatiron/projects/react-virtual-deckbox/deckbox_client/src/services/api.js"],"names":["URL","usersURL","parseJSON","res","json","authHeaders","Authorization","localStorage","getItem","loginHeaders","authRequest","credentials","fetch","method","headers","body","JSON","stringify","then","profileRequest"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,MAAMC,QAAQ,GAAGD,GAAG,GAAG,OAAvB;;AAEA,MAAME,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAzB;;AAEA,MAAMC,WAAW,GAAG,OAAO;AACvBC,EAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B;AAD9B,CAAP,CAApB;;AAIA,MAAMC,YAAY,GAAG;AACjB,YAAU,kBADO;AAEjB,kBAAgB;AAFC,CAArB;AAKA,OAAO,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AACrC,SAAOC,KAAK,CAACZ,GAAG,GAAG,cAAP,EAAuB;AAC/Ba,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAEL,YAFsB;AAG/BM,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AAHyB,GAAvB,CAAL,CAKNO,IALM,CAKDhB,SALC,CAAP;AAMH;AAED,OAAO,SAASiB,cAAT,GAA0B;AAC7B,SAAOP,KAAK,CAACZ,GAAG,GAAG,SAAP,EAAkB;AAC1Bc,IAAAA,OAAO,EAAET;AADiB,GAAlB,CAAL,CAGNa,IAHM,CAGDhB,SAHC,CAAP;AAIH","sourcesContent":["const URL = 'http://localhost:3000/'\nconst usersURL = URL + 'users'\n\nconst parseJSON = res => res.json()\n\nconst authHeaders = () => ({\n    Authorization: `Bearer ${localStorage.getItem('jwt')}`\n})\n\nconst loginHeaders = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n}\n\nexport function authRequest(credentials) {\n    return fetch(URL + 'authenticate', {\n        method: 'POST',\n        headers: loginHeaders,\n        body: JSON.stringify(credentials)\n    })\n    .then(parseJSON)\n}\n\nexport function profileRequest() {\n    return fetch(URL + 'profile', {\n        headers: authHeaders\n    })\n    .then(parseJSON)\n}"]},"metadata":{},"sourceType":"module"}